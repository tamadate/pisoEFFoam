/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1.0e-3;

d	0.4;
l	0.5;
rn	0.02;
rw	#calc	"10*$rn";

x4	#calc	"0.707107*$rw";
x5	#calc	"0.707107*$rn";
y4	#calc	"-0.707107*$rw";
y5	#calc	"-0.707107*$rn";
y6	#calc	"-1.0*$rn";
y7	#calc	"-1.0*$rw";
y8	#calc	"-1.0*$d";
x11	#calc	"-0.707107*$rn";
x12	#calc	"-0.707107*$rw";
x13	#calc	"-1.0*$rw";
x14	#calc	"-1.0*$rn";
x15	#calc	"-1.0*$l";
z	#calc	"-0.5*$rn";

p1x	#calc	"0.923880*$rn";
p1y	#calc	"-0.382683*$rn";
p2x	#calc	"0.923880*$rw";
p2y	#calc	"-0.382683*$rw";
p3x	#calc	"0.382683*$rn";
p3y	#calc	"-0.923880*$rn";
p4x	#calc	"0.382683*$rw";
p4y	#calc	"-0.923880*$rw";
p5x	#calc	"-0.382683*$rn";
p6x	#calc	"-0.382683*$rw";
p7x	#calc	"-0.923880*$rn";
p8x	#calc	"-0.923880*$rw";


vertices
(
    ($rn 0 0)
    ($rw 0 0)
    ($l 0 0)
    ($l $y4 0)
    ($x4 $y4 0)
    ($x5 $y5 0)
    (0 $y6 0)
    (0 $y7 0)
    (0 $y8 0)
    ($x4 $y8 0)
    ($l $y8 0)
    ($x11 $y5 0)
    ($x12 $y4 0)
    ($x13 0 0)
    ($x14 0 0)
    ($x15 0 0)
    ($x15 $y4 0)
    ($x15 $y8 0)
    ($x12 $y8 0)
    
    ($rn 0 $z)
    ($rw 0 $z)
    ($l 0 $z)
    ($l $y4 $z)
    ($x4 $y4 $z)
    ($x5 $y5 $z)
    (0 $y6 $z)
    (0 $y7 $z)
    (0 $y8 $z)
    ($x4 $y8 $z)
    ($l $y8 $z)
    ($x11 $y5 $z)
    ($x12 $y4 $z)
    ($x13 0 $z)
    ($x14 0 $z)
    ($x15 0 $z)
    ($x15 $y4 $z)
    ($x15 $y8 $z)
    ($x12 $y8 $z)
);

blocks
(
    hex (5 0 1 4 24 19 20 23) (10 10 1) simpleGrading (1 1 1)
    hex (4 1 2 3 23 20 21 22) (10 10 1) simpleGrading (1 1 1)
    hex (6 5 4 7 25 24 23 26) (10 10 1) simpleGrading (1 1 1)
    hex (7 4 9 8 26 23 28 27) (10 10 1) simpleGrading (1 1 1)
    hex (4 3 10 9 23 22 29 28) (10 10 1) simpleGrading (1 1 1)
    hex (11 6 7 12 30 25 26 31) (10 10 1) simpleGrading (1 1 1)
    hex (12 7 8 18 31 26 27 37) (10 10 1) simpleGrading (1 1 1)
    hex (14 11 12 13 33 30 31 32) (10 10 1) simpleGrading (1 1 1)
    hex (13 12 16 15 32 31 35 34) (10 10 1) simpleGrading (1 1 1)
    hex (12 18 17 16 31 37 36 35) (10 10 1) simpleGrading (1 1 1)
);

edges
(
    arc 5 0 ($p1x $p1y 0)
    arc 4 1 ($p2x $p2y 0)
    arc 6 5 ($p3x $p3y 0)
    arc 7 4 ($p4x $p4y 0)
    arc 11 6 ($p5x $p3y 0)
    arc 12 7 ($p6x $p4y 0)
    arc 14 11 ($p7x $p1y 0)
    arc 13 12 ($p8x $p2y 0)
    
    arc 24 19 ($p1x $p1y $z)
    arc 23 20 ($p2x $p2y $z)
    arc 25 24 ($p3x $p3y $z)
    arc 26 23 ($p4x $p4y $z)
    arc 30 25 ($p5x $p3y $z)
    arc 31 26 ($p6x $p4y $z)
    arc 33 30 ($p7x $p1y $z)
    arc 32 31 ($p8x $p2y $z)

);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (15 16 35 34)
            (16 17 36 35)
        );
    }
    
    outlet
    {
        type patch;
        faces
        (
            (3 2 21 22)
            (10 3 22 29)
        );
    }
    
    leftUpWall
    {
        type wall;
        faces
        (
            (13 15 34 32)
            (14 13 32 33)
        );
    }
    
    rightUpWall
    {
        type wall;
        faces
        (
            (1 0 19 20)
            (2 1 20 21)
        );
    }
    
    anode
    {
        type wall;
        faces
        (
            (0 5 24 19)
            (5 6 25 24)
            (6 11 30 25)
            (11 14 33 30)
        );
    }
    
    cathode
    {
        type wall;
        faces
        (
            (17 18 37 36)
            (18 8 27 37)
            (8 9 28 27)
            (9 10 29 28)
        );
    }
    
    frontAndBack
    {
        type empty;
        faces
        (
            (15 13 12 16)
            (13 14 11 12)
	    (16 12 18 17)
	    (12 11 6 7)
	    (12 7 8 18)
	    (6 5 4 7)
	    (7 4 9 8)
	    (5 0 1 4)
	    (1 2 3 4)
	    (4 3 10 9)
	    (32 34 35 31)
	    (33 32 31 30)
	    (31 35 36 37)
	    (25 30 31 26)
	    (26 31 37 27)
	    (24 25 26 23)
	    (23 26 27 28)
	    (20 19 24 23)
	    (21 20 23 22)
	    (22 23 28 29)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
